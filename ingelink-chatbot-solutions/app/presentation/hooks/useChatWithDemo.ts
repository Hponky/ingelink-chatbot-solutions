'use client';

import { useState, useCallback, useEffect } from 'react';
import Pusher from 'pusher-js';
import { ChatApiRequestBody, Message } from '@/domain/entities/message.entity';

type PusherMessageData = {
  role?: 'user' | 'model';
  parts?: [{ text: string }];
  reply?: string;
  response?: string;
};

const DEMO_CONVERSATION: Message[] = [
  {
    role: 'model',
    parts: [{ text: '¬°Hola! Soy el asistente de Humberto Agudelo, Ingeniero de Sistemas y Desarrollador Full-Stack. Estoy aqu√≠ para responder preguntas sobre su experiencia profesional. ¬øQu√© te gustar√≠a saber?' }],
  },
  {
    role: 'user',
    parts: [{ text: '¬øCu√°l es la experiencia laboral de Humberto?' }],
  },
  {
    role: 'model',
    parts: [{ text: 'Humberto tiene m√°s de 4 a√±os de experiencia como desarrollador full-stack:\n\nüè¢ **APICREATE S.A.S** (Jul 2023 - Actualidad)\n‚Ä¢ Desarrollador de Software I\n‚Ä¢ Mejor√≥ la eficiencia operativa en un 15%\n‚Ä¢ Implement√≥ soluciones personalizadas para gesti√≥n de proyectos\n\nüè¢ **NEWSHORE** (Dic 2022 - Jul 2023)\n‚Ä¢ Desarrollo Full-stack\n‚Ä¢ Trabajo en equipos multifuncionales\n‚Ä¢ Refactorizaci√≥n de c√≥digo para mejor rendimiento\n\nüè¢ **Universidad de Caldas** (Ago 2021 - Dic 2022)\n‚Ä¢ Lider√≥ desarrollo de plataforma de evaluaci√≥n acad√©mica\n‚Ä¢ Colaboraci√≥n directa con stakeholders' }],
  },
  {
    role: 'user',
    parts: [{ text: '¬øQu√© tecnolog√≠as maneja?' }],
  },
  {
    role: 'model',
    parts: [{ text: 'Humberto tiene un stack tecnol√≥gico muy completo:\n\n**Frontend:**\n‚Ä¢ HTML, CSS, JavaScript, TypeScript\n‚Ä¢ React.js/Next.js\n‚Ä¢ Angular\n\n**Backend:**\n‚Ä¢ Node.js\n‚Ä¢ SpringBoot\n\n**Bases de Datos:**\n‚Ä¢ SQL\n‚Ä¢ NoSQL\n\n**Otros:**\n‚Ä¢ Ingl√©s B2\n‚Ä¢ Arquitectura de software\n‚Ä¢ Metodolog√≠as √°giles (SCRUM)\n\n¬øTe interesa alguna tecnolog√≠a en particular?' }],
  },
  {
    role: 'user',
    parts: [{ text: '¬øCu√°les son sus principales fortalezas?' }],
  },
  {
    role: 'model',
    parts: [{ text: 'Las principales fortalezas de Humberto incluyen:\n\n**Habilidades T√©cnicas:**\n‚Ä¢ Desarrollo full-stack con enfoque en calidad\n‚Ä¢ Arquitectura de software escalable\n‚Ä¢ Optimizaci√≥n de rendimiento\n\n**Habilidades Blandas:**\n‚Ä¢ Liderazgo y trabajo en equipo\n‚Ä¢ Esp√≠ritu creativo y vers√°til al cambio\n‚Ä¢ Colaborativo y carism√°tico\n‚Ä¢ Proactivo y responsable\n‚Ä¢ Trabajo con planeaci√≥n\n\n**Diferenciadores:**\n‚Ä¢ Biling√ºe (Ingl√©s B2)\n‚Ä¢ Experiencia en m√∫ltiples industrias\n‚Ä¢ Enfoque en aprendizaje continuo\n‚Ä¢ Capacidad de trabajar con stakeholders' }],
  }
];

const SUGGESTED_QUESTIONS = [
  // Experiencia t√©cnica y tecnolog√≠as
  '¬øPuede contarme sobre su experiencia con React y Next.js?',
  '¬øQu√© tecnolog√≠as de backend maneja y cu√°l prefiere?',
  '¬øTiene experiencia con bases de datos SQL y NoSQL?',
  '¬øC√≥mo es su experiencia con TypeScript y JavaScript?',
  '¬øHa trabajado con arquitectura de microservicios?',
  '¬øQu√© herramientas de testing utiliza en sus proyectos?',
  
  // Experiencia profesional y logros
  '¬øC√≥mo maneja los proyectos en equipo?',
  '¬øCu√°l ha sido su mayor logro profesional?',
  '¬øPuede describir un proyecto desafiante que haya completado?',
  '¬øC√≥mo mejor√≥ la eficiencia operativa en un 15% en APICREATE?',
  '¬øQu√© tipo de soluciones personalizadas ha desarrollado?',
  
  // Metodolog√≠as y procesos
  '¬øQu√© metodolog√≠as de desarrollo utiliza?',
  '¬øC√≥mo aplica SCRUM en sus proyectos?',
  '¬øCu√°l es su proceso para el control de calidad del c√≥digo?',
  '¬øC√≥mo maneja la documentaci√≥n t√©cnica?',
  
  // Habilidades blandas y liderazgo
  '¬øC√≥mo describe su estilo de liderazgo?',
  '¬øC√≥mo maneja la comunicaci√≥n con stakeholders?',
  '¬øQu√© estrategias usa para resolver conflictos en el equipo?',
  '¬øC√≥mo se adapta a los cambios en los requerimientos?',
  
  // Disponibilidad y objetivos
  '¬øEst√° disponible para nuevas oportunidades?',
  '¬øQu√© tipo de proyectos le interesan m√°s?',
  '¬øCu√°les son sus objetivos profesionales a corto plazo?',
  '¬øEst√° interesado en roles de liderazgo t√©cnico?',
  '¬øPrefiere trabajo remoto, presencial o h√≠brido?',
  
  // Aprendizaje y crecimiento
  '¬øC√≥mo se mantiene actualizado con las nuevas tecnolog√≠as?',
  '¬øQu√© tecnolog√≠as le gustar√≠a aprender pr√≥ximamente?',
  '¬øHa participado en proyectos de c√≥digo abierto?',
  '¬øC√≥mo eval√∫a su nivel de ingl√©s t√©cnico?',
  
  // Espec√≠ficas del perfil
  '¬øPuede hablar sobre su experiencia en la Universidad de Caldas?',
  '¬øQu√© aprendi√≥ trabajando en NEWSHORE?',
  '¬øC√≥mo fue la transici√≥n de estudiante a desarrollador profesional?',
  '¬øQu√© lo motiva como desarrollador full-stack?'
];

export const useChatWithDemo = (isDemoMode: boolean = false) => {
  const [history, setHistory] = useState<Message[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [engine, setEngine] = useState<'n8n' | 'langchain'>('n8n');
  const [suggestedQuestions, setSuggestedQuestions] = useState<string[]>([]);
  const [usedQuestions, setUsedQuestions] = useState<Set<string>>(new Set());

  // Funci√≥n para obtener preguntas aleatorias sin duplicados
  const getRandomQuestions = useCallback((count: number = 3, exclude: Set<string> = new Set()) => {
    const availableQuestions = SUGGESTED_QUESTIONS.filter(q => !exclude.has(q));
    
    if (availableQuestions.length < count) {
      // Si no hay suficientes preguntas disponibles, reiniciar el conjunto de usadas
      const freshQuestions = SUGGESTED_QUESTIONS.slice().sort(() => 0.5 - Math.random()).slice(0, count);
      return freshQuestions;
    }
    
    const shuffled = [...availableQuestions].sort(() => 0.5 - Math.random());
    return shuffled.slice(0, count);
  }, []);

  // Funci√≥n para manejar la selecci√≥n de una pregunta
  const handleQuestionSelect = useCallback((selectedQuestion: string) => {
    const newUsedQuestions = new Set(usedQuestions);
    newUsedQuestions.add(selectedQuestion);
    setUsedQuestions(newUsedQuestions);
    
    // Obtener nuevas preguntas excluyendo las ya usadas
    const remainingQuestions = suggestedQuestions.filter(q => q !== selectedQuestion);
    const newQuestions = getRandomQuestions(1, newUsedQuestions);
    
    if (newQuestions.length > 0 && !remainingQuestions.includes(newQuestions[0])) {
      setSuggestedQuestions([...remainingQuestions, ...newQuestions]);
    } else {
      setSuggestedQuestions(remainingQuestions);
    }
  }, [suggestedQuestions, usedQuestions, getRandomQuestions]);

  useEffect(() => {
    if (isDemoMode) {
      setHistory(DEMO_CONVERSATION);
      const initialQuestions = getRandomQuestions(3);
      setSuggestedQuestions(initialQuestions);
      setUsedQuestions(new Set(initialQuestions));
    } else {
      setHistory([
        {
          role: 'model',
          parts: [{ text: '¬°Hola! Soy IngeLink AI. ¬øC√≥mo puedo ayudarte hoy?' }],
        },
      ]);
      setSuggestedQuestions([]);
      setUsedQuestions(new Set());
    }

    const pusher = new Pusher(process.env.NEXT_PUBLIC_PUSHER_KEY!, {
      cluster: process.env.NEXT_PUBLIC_PUSHER_CLUSTER!,
    });

    const channel = pusher.subscribe('chat-channel');

    channel.bind('new-message', (data: PusherMessageData) => {
      let message: Message;
      if (data.role && data.parts) {
        message = data as Message;
      } else if (data.reply) {
        message = {
          role: 'model' as const,
          parts: [{ text: data.reply }]
        };
      } else if (data.response) {
        message = {
          role: 'model' as const,
          parts: [{ text: data.response }]
        };
      } else {
        console.error('Received message in unexpected format:', data);
        return;
      }
      
      setHistory(prevHistory => [...prevHistory, message]);
      setIsLoading(false);
    });

    return () => {
      pusher.unsubscribe('chat-channel');
    };
  }, [isDemoMode, getRandomQuestions]);

  const handleSendMessage = async (messageText: string) => {
    if (!messageText.trim()) return;

    const newUserMessage: Message = {
      role: 'user',
      parts: [{ text: messageText }],
    };

    const updatedHistory = [...history, newUserMessage];
    setHistory(updatedHistory);
    setIsLoading(true);

    // En modo demo, simular respuestas relacionadas con el CV
    if (isDemoMode) {
      setTimeout(() => {
        const demoResponse = generateDemoResponse(messageText);
        const aiMessage: Message = {
          role: 'model',
          parts: [{ text: demoResponse }],
        };
        setHistory(prevHistory => [...prevHistory, aiMessage]);
        setIsLoading(false);
      }, 1500);
      return;
    }

    try {
      const requestBody: ChatApiRequestBody = {
        engine: engine,
        query: messageText,
        history: history,
      };

      const response = await fetch('/api/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(requestBody),
      });

      if (!response.ok) {
        throw new Error('Error en la respuesta del servidor');
      }

      if (engine === 'langchain') {
        const data = await response.json();
        const aiMessage: Message = {
          role: 'model',
          parts: [{ text: data.reply }],
        };
        setHistory(prevHistory => [...prevHistory, aiMessage]);
        setIsLoading(false);
      }
    } catch (error) {
      console.error("Error contacting the chatbot:", error);
      const errorMessage: Message = {
        role: 'model',
        parts: [{ text: 'Lo siento, estoy teniendo problemas para conectarme. Por favor, intenta de nuevo m√°s tarde.' }]
      };
      setHistory(prevHistory => [...prevHistory, errorMessage]);
      setIsLoading(false);
    }
  };

  const clearChat = useCallback(() => {
    if (isDemoMode) {
      setHistory(DEMO_CONVERSATION);
      const initialQuestions = getRandomQuestions(3);
      setSuggestedQuestions(initialQuestions);
      setUsedQuestions(new Set(initialQuestions));
    } else {
      setHistory([
        {
          role: 'model',
          parts: [{ text: '¬°Hola! Soy IngeLink AI. ¬øC√≥mo puedo ayudarte hoy?' }],
        },
      ]);
      setSuggestedQuestions([]);
      setUsedQuestions(new Set());
    }
    setIsLoading(false);
  }, [isDemoMode, getRandomQuestions]);

  return {
    history,
    isLoading,
    handleSendMessage,
    clearChat,
    engine,
    setEngine,
    suggestedQuestions,
    handleQuestionSelect,
    isDemoMode
  };
};

function generateDemoResponse(question: string): string {
  const lowerQuestion = question.toLowerCase();
  
  if (lowerQuestion.includes('react') || lowerQuestion.includes('next')) {
    return 'Humberto tiene s√≥lida experiencia con React.js y Next.js. En APICREATE implement√≥ soluciones personalizadas usando estas tecnolog√≠as, y en NEWSHORE trabaj√≥ en refactorizaci√≥n de c√≥digo React para mejorar el rendimiento. Su enfoque se centra en componentes reutilizables y arquitectura escalable.';
  }
  
  if (lowerQuestion.includes('equipo') || lowerQuestion.includes('colabora')) {
    return 'Humberto destaca por su capacidad de trabajo en equipo. En NEWSHORE colabor√≥ con equipos multifuncionales desde UX hasta infraestructura. Es carism√°tico, colaborativo y tiene experiencia liderando proyectos como en la Universidad de Caldas donde gestion√≥ stakeholders y equipos de desarrollo.';
  }
  
  if (lowerQuestion.includes('metodolog') || lowerQuestion.includes('scrum') || lowerQuestion.includes('√°gil')) {
    return 'Humberto tiene experiencia con metodolog√≠as √°giles, espec√≠ficamente SCRUM. En NEWSHORE trabaj√≥ en un marco de desarrollo √°gil que permiti√≥ entregas eficientes y adaptaci√≥n r√°pida a cambios. Su enfoque incluye planificaci√≥n, colaboraci√≥n continua y mejora iterativa.';
  }
  
  if (lowerQuestion.includes('logro') || lowerQuestion.includes('√©xito')) {
    return 'Uno de sus mayores logros fue liderar el desarrollo de una plataforma de evaluaci√≥n acad√©mica en la Universidad de Caldas que automatiz√≥ procesos y mejor√≥ significativamente la eficiencia para profesores y directivos. Tambi√©n logr√≥ una mejora del 15% en eficiencia operativa en APICREATE.';
  }
  
  if (lowerQuestion.includes('disponib') || lowerQuestion.includes('oportunidad')) {
    return 'Humberto est√° comprometido con el aprendizaje continuo y siempre abierto a nuevas oportunidades que le permitan crecer profesionalmente. Su perfil muestra proactividad y adaptabilidad al cambio, caracter√≠sticas ideales para roles desafiantes.';
  }
  
  if (lowerQuestion.includes('proyecto') || lowerQuestion.includes('interesa')) {
    return 'Le interesan proyectos que involucren desarrollo full-stack con tecnolog√≠as modernas, especialmente aquellos que requieran arquitectura escalable y trabajo en equipo. Su experiencia abarca desde plataformas educativas hasta sistemas de gesti√≥n empresarial.';
  }
  
  if (lowerQuestion.includes('backend') || lowerQuestion.includes('servidor')) {
    return 'Humberto tiene s√≥lida experiencia en backend con Node.js y SpringBoot. En APICREATE desarroll√≥ APIs RESTful escalables y en NEWSHORE trabaj√≥ en arquitecturas de microservicios. Su enfoque incluye optimizaci√≥n de consultas, manejo de sesiones y implementaci√≥n de middleware personalizado.';
  }
  
  if (lowerQuestion.includes('sql') || lowerQuestion.includes('nosql') || lowerQuestion.includes('base') || lowerQuestion.includes('datos')) {
    return 'Tiene experiencia tanto con bases de datos SQL como NoSQL. Ha trabajado con MySQL, PostgreSQL para datos relacionales y MongoDB para documentos. Su experiencia incluye dise√±o de esquemas, optimizaci√≥n de consultas y migraci√≥n de datos.';
  }
  
  if (lowerQuestion.includes('typescript') || lowerQuestion.includes('javascript')) {
    return 'Humberto domina tanto JavaScript como TypeScript. Prefiere TypeScript para proyectos grandes por su tipado est√°tico que reduce errores y mejora la mantenibilidad. Ha migrado proyectos legacy de JS a TS y implementado configuraciones avanzadas de ESLint y Prettier.';
  }
  
  if (lowerQuestion.includes('microservicio') || lowerQuestion.includes('arquitectura')) {
    return 'Tiene experiencia dise√±ando arquitecturas escalables y ha trabajado con patrones de microservicios en NEWSHORE. Su enfoque incluye separaci√≥n de responsabilidades, comunicaci√≥n as√≠ncrona entre servicios y implementaci√≥n de API gateways.';
  }
  
  if (lowerQuestion.includes('testing') || lowerQuestion.includes('prueba')) {
    return 'Utiliza Jest para testing unitario, Cypress para E2E y React Testing Library para componentes. Su enfoque incluye TDD cuando es apropiado, cobertura de c√≥digo superior al 80% y automatizaci√≥n de pruebas en CI/CD.';
  }
  
  if (lowerQuestion.includes('desafiante') || lowerQuestion.includes('complejo')) {
    return 'Uno de sus proyectos m√°s desafiantes fue la plataforma de evaluaci√≥n acad√©mica en la Universidad de Caldas, que requiri√≥ integraci√≥n con m√∫ltiples sistemas legacy, manejo de concurrencia para miles de usuarios simult√°neos y implementaci√≥n de algoritmos de calificaci√≥n autom√°tica.';
  }
  
  if (lowerQuestion.includes('stakeholder') || lowerQuestion.includes('comunicaci√≥n')) {
    return 'Humberto destaca en comunicaci√≥n t√©cnica con stakeholders no t√©cnicos. En la Universidad de Caldas facilit√≥ reuniones entre profesores, directivos y el equipo t√©cnico, traduciendo requerimientos de negocio a especificaciones t√©cnicas claras.';
  }
  
  if (lowerQuestion.includes('liderazgo') || lowerQuestion.includes('l√≠der')) {
    return 'Su estilo de liderazgo es colaborativo y orientado al mentoring. Cree en empoderar al equipo, fomentar la innovaci√≥n y mantener comunicaci√≥n abierta. Ha liderado equipos de 3-5 desarrolladores y coordinado con equipos multidisciplinarios.';
  }
  
  if (lowerQuestion.includes('remoto') || lowerQuestion.includes('presencial') || lowerQuestion.includes('h√≠brido')) {
    return 'Humberto se adapta a cualquier modalidad de trabajo. Tiene experiencia en trabajo remoto efectivo con herramientas como Slack, Zoom y metodolog√≠as √°giles distribuidas. Valora la flexibilidad pero tambi√©n aprecia la colaboraci√≥n presencial cuando es necesaria.';
  }
  
  if (lowerQuestion.includes('actualizado') || lowerQuestion.includes('aprender') || lowerQuestion.includes('tecnolog√≠a')) {
    return 'Se mantiene actualizado a trav√©s de documentaci√≥n oficial, cursos en l√≠nea, conferencias tech y contribuciones a proyectos open source. Actualmente est√° explorando tecnolog√≠as como Docker, Kubernetes y arquitecturas serverless.';
  }
  
  if (lowerQuestion.includes('c√≥digo abierto') || lowerQuestion.includes('open source')) {
    return 'Ha contribuido a varios proyectos de c√≥digo abierto, principalmente en el ecosistema de React y Node.js. Mantiene algunos proyectos personales en GitHub y participa activamente en la comunidad de desarrolladores locales.';
  }
  
  if (lowerQuestion.includes('ingl√©s') || lowerQuestion.includes('english')) {
    return 'Tiene un nivel B2 de ingl√©s t√©cnico, puede leer documentaci√≥n, participar en reuniones internacionales y escribir c√≥digo y comentarios en ingl√©s. Ha trabajado con equipos distribuidos globalmente y se comunica efectivamente en ingl√©s t√©cnico.';
  }
  
  return 'Esa es una excelente pregunta sobre Humberto. Te recomiendo contactarlo directamente para obtener m√°s detalles espec√≠ficos. Puedes encontrarlo en:\n\nüìß humberto228xd@gmail.com\nüì± +57 3044388349\nüíº LinkedIn: humberto-agudelo\nüîó GitHub: Hardev1\n\n¬øHay algo m√°s espec√≠fico sobre su experiencia t√©cnica que te gustar√≠a saber?';
}